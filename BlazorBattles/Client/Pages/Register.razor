@page "/register"
@using BlazorBattles.Shared
@using BlazorBattles.Client.Services
@inject IUnitService UnitService
@inject NavigationManager navigationManager
@inject IAuthService AuthService
@inject IToastService ToastService

<h3>Register</h3>
<EditForm Model="@user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="email"> Email </label>
        <InputText id="email" @bind-Value="user.Email" class="form-control"/>
        <ValidationMessage For="@(() => user.Email)" />
    </div>
    <div class="form-group">
        <label for="username"> Username </label>
        <InputText id="username" @bind-Value="user.Username" class="form-control"/>
        <ValidationMessage For="@(() => user.Username)" />
    </div>
    <div class="form-group">
        <label for="bio"> Bio </label>
        <InputTextArea id="bio" @bind-Value="user.Bio" class="form-control"/>
    </div>
    <div class="form-group">
        <label for="password"> Password </label>
        <InputText id="password" @bind-Value="user.Password" class="form-control"/>
        <ValidationMessage For="@(() => user.Password)" />
    </div>
    <div class="form-group">
        <label for="confirm-password"> Confirm Password </label>
        <InputText id="confirm-password" @bind-Value="user.ConfirmPassword" class="form-control"/>
        <ValidationMessage For="@(() => user.ConfirmPassword)" />
    </div>
    <div class="form-group">
        <label for="food"> Food </label>
        <InputNumber id="food" @bind-Value="user.Food" class="form-control"/>
        <ValidationMessage For="@(() => user.Food)" />
    </div>
    <div class="form-group">
        <label for="startUnit"> Starting Unit</label>
        <InputSelect id="startUnit" @bind-Value="user.StartUnitId" class="form-control">
            @foreach (var unit in UnitService.Units)
            {
                <option value="@unit.Id.ToString()"> @unit.Title </option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <label for="date-of-birth"> Date Of Birth </label>
        <InputDate id="date-of-birth" @bind-Value="user.DateOfBirth" class="form-control"/>
    </div>
    <div class="form-check">
        <InputCheckbox id="confirmed" @bind-Value="user.IsConfirmed" class="form-check-input"/>
        <label for="confirmed"> Confirmed </label>
        <ValidationMessage For="@(() => user.IsConfirmed)" />
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
    <ValidationSummary />
</EditForm>

@code {
    UserRegister user = new UserRegister();

    async void HandleRegistration()
    {
        var result = await AuthService.Register(user);
        if (result.Success)
        {
            ToastService.ShowSuccess(result.Message);
            navigationManager.NavigateTo("");
        }
        else
        {
            ToastService.ShowError(result.Message);
        }
    }
    
    protected override async Task OnInitializedAsync()
    {
        await UnitService.LoadUnitsAsync();
    }
}